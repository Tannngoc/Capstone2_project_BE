name: Fetch Stock Data Daily

on:
  push:
    branches:
      - feature/train_AI
  schedule:
    - cron: '0 0 * * *'  # Ch·∫°y h√†ng ng√†y l√∫c 00:00 UTC
  workflow_dispatch:

concurrency:
  group: stock-data-update
  cancel-in-progress: true

jobs:
  fetch-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: feature/train_AI

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install yfinance pandas
          pip install tensorflow scikit-learn
          pip install flask flask_sqlalchemy

      - name: Remove untracked files (if any)
        run: |
          git clean -fd
          echo "‚úÖ Removed untracked files"

      - name: Reset local changes
        run: |
          git reset --hard
          echo "‚úÖ Reset local changes"

      - name: Run data fetch script
        run: python scripts/fetch_stock_data.py

      - name: Import stock data into DB
        run: |
          echo "‚è≥ Importing stock data into database..."
          python import_csv_data.py
          echo "‚úÖ Stock data imported into database successfully"

      - name: Commit and push new data
        run: |
          git config --global user.name "Tannngoc"
          git config --global user.email "github-actions@github.com"

          git add app/db/*.csv
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            DATE=$(date)
            git commit -m "üìä Auto-update stock data [$DATE]"
            git pull --rebase origin main
            git pull --rebase origin feature/train_AI
            git push origin feature/train_AI
          fi

      - name: Wait for 5 seconds (to ensure data is fully updated)
        run: |
          echo "‚è≥ Waiting for 5 seconds before training the model"
          sleep 5

      - name: Train AI Model
        run: |
          python app/AI/train_model.py
          echo "‚úÖ Model trained and saved successfully"

      - name: Commit and push trained model
        run: |
          git config --global user.name "Tannngoc"
          git config --global user.email "github-actions@github.com"

          git add app/AI/joint_stock_model.keras
          if git diff --cached --quiet; then
            echo "‚ö†Ô∏è No model changes to commit"
          else
            DATE=$(date)
            git commit -m "üß† Update trained AI model [$DATE]"
            git pull --rebase origin feature/train_AI
            git push origin feature/train_AI
            echo "‚úÖ Model committed and pushed"
